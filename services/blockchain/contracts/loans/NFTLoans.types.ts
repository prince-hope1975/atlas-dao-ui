/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.25.2.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Decimal = string;
export interface InstantiateMsg {
  fee_distributor: string;
  fee_rate: Decimal;
  name: string;
  owner?: string | null;
}
export type ExecuteMsg = {
  deposit_collaterals: {
    comment?: string | null;
    loan_preview?: AssetInfo | null;
    terms?: LoanTerms | null;
    tokens: AssetInfo[];
  };
} | {
  modify_collaterals: {
    comment?: string | null;
    loan_id: number;
    loan_preview?: AssetInfo | null;
    terms?: LoanTerms | null;
  };
} | {
  withdraw_collaterals: {
    loan_id: number;
  };
} | {
  make_offer: {
    borrower: string;
    comment?: string | null;
    loan_id: number;
    terms: LoanTerms;
  };
} | {
  cancel_offer: {
    global_offer_id: string;
  };
} | {
  refuse_offer: {
    global_offer_id: string;
  };
} | {
  withdraw_refused_offer: {
    global_offer_id: string;
  };
} | {
  accept_offer: {
    global_offer_id: string;
  };
} | {
  accept_loan: {
    borrower: string;
    comment?: string | null;
    loan_id: number;
  };
} | {
  repay_borrowed_funds: {
    loan_id: number;
  };
} | {
  withdraw_defaulted_loan: {
    borrower: string;
    loan_id: number;
  };
} | {
  set_owner: {
    owner: string;
  };
} | {
  claim_ownership: {};
} | {
  set_fee_distributor: {
    fee_depositor: string;
  };
} | {
  set_fee_rate: {
    fee_rate: Decimal;
  };
};
export type AssetInfo = {
  coin: Coin;
} | {
  cw721_coin: Cw721Coin;
} | {
  sg721_token: Sg721Token;
};
export type Uint128 = string;
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export interface Cw721Coin {
  address: string;
  token_id: string;
}
export interface Sg721Token {
  address: string;
  token_id: string;
}
export interface LoanTerms {
  duration_in_blocks: number;
  interest: Uint128;
  principle: Coin;
}
export type QueryMsg = {
  contract_info: {};
} | {
  borrower_info: {
    borrower: string;
  };
} | {
  collateral_info: {
    borrower: string;
    loan_id: number;
  };
} | {
  collaterals: {
    borrower: string;
    limit?: number | null;
    start_after?: number | null;
  };
} | {
  all_collaterals: {
    limit?: number | null;
    start_after?: [string, number] | null;
  };
} | {
  offer_info: {
    global_offer_id: string;
  };
} | {
  offers: {
    borrower: string;
    limit?: number | null;
    loan_id: number;
    start_after?: string | null;
  };
} | {
  lender_offers: {
    lender: string;
    limit?: number | null;
    start_after?: string | null;
  };
};
export type Timestamp = Uint64;
export type Uint64 = string;
export type LoanState = "published" | "started" | "defaulted" | "ended" | "inactive";
export interface MultipleCollateralsAllResponse {
  collaterals: CollateralResponse[];
  next_collateral?: [string, number] | null;
}
export interface CollateralResponse {
  borrower: string;
  collateral: CollateralInfo;
  loan_id: number;
}
export interface CollateralInfo {
  active_offer?: string | null;
  associated_assets: AssetInfo[];
  comment?: string | null;
  list_date: Timestamp;
  loan_preview?: AssetInfo | null;
  offer_amount: number;
  start_block?: number | null;
  state: LoanState;
  terms?: LoanTerms | null;
}
export interface BorrowerInfo {
  last_collateral_id: number;
}
export interface MultipleCollateralsResponse {
  collaterals: CollateralResponse[];
  next_collateral?: number | null;
}
export type Addr = string;
export interface ContractInfo {
  fee_distributor: Addr;
  fee_rate: Decimal;
  global_offer_index: number;
  name: string;
  owner: OwnerStruct;
}
export interface OwnerStruct {
  new_owner?: Addr | null;
  owner: Addr;
}
export type OfferState = "published" | "accepted" | "refused" | "cancelled";
export interface MultipleOffersResponse {
  next_offer?: string | null;
  offers: OfferResponse[];
}
export interface OfferResponse {
  global_offer_id: string;
  offer_info: OfferInfo;
}
export interface OfferInfo {
  borrower: Addr;
  comment?: string | null;
  deposited_funds?: Coin | null;
  lender: Addr;
  list_date: Timestamp;
  loan_id: number;
  offer_id: number;
  state: OfferState;
  terms: LoanTerms;
}